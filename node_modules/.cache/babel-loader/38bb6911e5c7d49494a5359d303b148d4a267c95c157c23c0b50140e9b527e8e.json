{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai\\\\Desktop\\\\REACT\\\\family-guy-soundboard\\\\src\\\\Components\\\\Character.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CharacterMod from './CharacterMod.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Character(_ref) {\n  _s();\n  let {\n    name,\n    sounds,\n    soundNames\n  } = _ref;\n  const [audio] = useState(new Audio());\n  const handleAudioPlay = e => {\n    audio.src = e.target.value;\n    audio.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: CharacterMod.SoundsCon,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: CharacterMod.NameCon,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: CharacterMod.Sounds,\n      children: [sounds.map((sound, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: CharacterMod.SoundsBtn,\n          value: sound,\n          onClick: handleAudioPlay,\n          children: soundNames[index]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 32\n        }, this);\n      }), sounds.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No sounds available for \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(Character, \"uee0m+aZXLWxPuJ8c3VmBrGEAGA=\");\n_c = Character;\nexport default Character;\nvar _c;\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["React","useState","CharacterMod","jsxDEV","_jsxDEV","Character","_ref","_s","name","sounds","soundNames","audio","Audio","handleAudioPlay","e","src","target","value","play","className","SoundsCon","children","NameCon","fileName","_jsxFileName","lineNumber","columnNumber","Sounds","map","sound","index","SoundsBtn","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/Sai/Desktop/REACT/family-guy-soundboard/src/Components/Character.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport CharacterMod from './CharacterMod.module.css'\r\n\r\nfunction Character({name, sounds, soundNames}) {\r\n    const [audio] = useState(new Audio())\r\n\r\n    const handleAudioPlay = (e) =>{\r\n        audio.src = e.target.value\r\n        audio.play()\r\n    }\r\n\r\n    return (\r\n        <div className={CharacterMod.SoundsCon}>\r\n            <div className={CharacterMod.NameCon}>\r\n                <h2>{name}</h2>\r\n            </div>\r\n            <div className={CharacterMod.Sounds}>\r\n                {\r\n                    sounds.map((sound, index) => {\r\n                        return <button className={CharacterMod.SoundsBtn} value={sound} key={index} onClick={handleAudioPlay}>\r\n                            {soundNames[index]}\r\n                        </button>\r\n                    })\r\n                }\r\n                {sounds.length === 0 && <p>No sounds available for <span>{name}</span></p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Character"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,SAASA,CAAAC,IAAA,EAA6B;EAAAC,EAAA;EAAA,IAA5B;IAACC,IAAI;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EACzC,MAAM,CAACK,KAAK,CAAC,GAAGV,QAAQ,CAAC,IAAIW,KAAK,EAAE,CAAC;EAErC,MAAMC,eAAe,GAAIC,CAAC,IAAI;IAC1BH,KAAK,CAACI,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC1BN,KAAK,CAACO,IAAI,EAAE;EAChB,CAAC;EAED,oBACId,OAAA;IAAKe,SAAS,EAAEjB,YAAY,CAACkB,SAAU;IAAAC,QAAA,gBACnCjB,OAAA;MAAKe,SAAS,EAAEjB,YAAY,CAACoB,OAAQ;MAAAD,QAAA,eACjCjB,OAAA;QAAAiB,QAAA,EAAKb;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb,eACNtB,OAAA;MAAKe,SAAS,EAAEjB,YAAY,CAACyB,MAAO;MAAAN,QAAA,GAE5BZ,MAAM,CAACmB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACzB,oBAAO1B,OAAA;UAAQe,SAAS,EAAEjB,YAAY,CAAC6B,SAAU;UAACd,KAAK,EAAEY,KAAM;UAAaG,OAAO,EAAEnB,eAAgB;UAAAQ,QAAA,EAChGX,UAAU,CAACoB,KAAK;QAAC,GAD+CA,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEjE;MACb,CAAC,CAAC,EAELjB,MAAM,CAACwB,MAAM,KAAK,CAAC,iBAAI7B,OAAA;QAAAiB,QAAA,GAAG,0BAAwB,eAAAjB,OAAA;UAAAiB,QAAA,EAAOb;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;AAACnB,EAAA,CAzBQF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA2BlB,eAAeA,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}